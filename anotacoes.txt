Classe

    Relacionado ao conceito de abstração na orientação à objeto
    Abstração: obejto real e tranforma em objeto na programação

    Ex: Classe Pessoa
        Atributo Nome, Idade

    Sempre representar informações que você vaiuu utilizar, de acordo com o objetivo do seu programa

    Metodo: a ação que a classe vai fazer

    Classe -> Atributo -> Metodos

    Classe representa a construção de um objeto

-----------------------------------------------------------------------------------------------------------------------------------------

    A classe sempre tem que começar com maiuscula(camelcase)
    Ex: Pessoa, PessoaFisica

    Pode ter mais de uma classe com o mesmo nome, porém devem estar em namespaces diferentes
    namespaces: caminho para a classe criada

    Instanciar a classe: criar de fato o objeto para ser manipulado
    Se usa new Classe para instanciar a classe

----------------------------------------------------------------------------------------------------------------------------------------

    O . é a continuação da ação relacionada aquela classe.(chamar metodo)

----------------------------------------------------------------------------------------------------------------------------------------

    Cases (Convenções)
        camelCase
        PascalCase
        snake_case
        spinal-case

    É importante utilizar para deixar o código mais legivel e padronizado
    No C# é mais usado o camelCase e o PascalCase

    Nunca abrevia classe, propriedade e variaveis, para melhor entendimento e manutenção do código, mesmo que o nome fique grande
    É recomendado que o nome da classe siga o nome do arquivo fisico
    Não pode ter caractere especial na classe, nome(propriedade) ou variavel, exceto underline(_)

----------------------------------------------------------------------------------------------------------------------------------------

    Tipos de dados
        - String: serie de caracteres(cadeia) / Texto(letra, numeros e caracteres especiais)
        - Char: caracter unicode
        - Object:
        - Booleano: false ou true / 0 ou 1
        - Byte:
        - Decimal: Valores com 28 a 29 digitos decimais / Valores monetários por exemplo / Mais preciso
        - Double: Valores decimais (64 bits) mais preciso que o float
        - Int: valor inteiro(idade, quantidade)
        - Float: Valores decimais (32 bits)
        - Long: Maior quantiadde de valores aceito
        - Uint: Não aceita valores negativos mas dobra a quantidade de valores positivos
        - Short: Aceita um quantidade bem reduzida de valores
        - Ulong: Não aceita valores negativos mas dobra a quantidade de valores positivos
       
----------------------------------------------------------------------------------------------------------------------------------------

    DateTime
        Representar datas no C#

----------------------------------------------------------------------------------------------------------------------------------------

    Operadores de atribuição
        = : Atribui um valor á uma variavel
        +=
        -=
        /=
        *=
        %=

    Converte valores
        INT
        Convert.(metodo a ser utilizado): aceita valor null
        .Parse: não aceita valor null

        STRING
        .TiString()

        Casting Implicito
        Converte automaticamente

        .TryParse: ele tenta converter e mesmo que de erro ele continua o programa

    Ordem dos Operadores
        1º ()
        2º Expoente
        3º Divisão e Multiplicação
        4º Adição e Subtração

---------------------------------------------------------------------------------------------------------------------------------------

    Operadores Condicionais
        Muda o fluxo de execusão do código e mostra qual caminho quer percorrer.

---------------------------------------------------------------------------------------------------------------------------------------

    Operadores Logicos
        Or / ou / Pipe(||)  
            Verdade e falso = Verdadeiro
            Falso e verdadeiro = Verdadeiro
            Verdadeiro e verdadeiro = Verdadeiro
            Falso e falso = Falso

        And / E / &&
            Verdade e falso = Falso
            Falso e verdadeiro = Falso
            Falso e falso = Falso
            Verdadeiro e verdadeiro = Verdadeiro
        
        NOT / !
            Verdadeiro = Falso
            Falso = Verdadeiro

---------------------------------------------------------------------------------------------------------------------------------------

    Operadores Aritiméticos e classe Math
        + Adição | x + x
        - Subtração | x - x
        * Multiplicação | x * x
        / Divisão | x / x
        % Resto/Modulo | x % x
        ++ Incremento | x++
        -- Decremento | x--

        Math possui todas as operações mais complexas da matemática(seno, coseno, tangente, fatorial, etc)